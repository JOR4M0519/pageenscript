package pageenscript2.editor;

/*Generated by MPS */

import jetbrains.mps.editor.runtime.descriptor.AbstractEditorBuilder;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cellLayout.CellLayout_Vertical;
import jetbrains.mps.lang.editor.cellProviders.SingleRoleCellProvider;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.openapi.editor.cells.CellActionType;
import jetbrains.mps.editor.runtime.impl.cellActions.CellAction_DeleteSmart;
import jetbrains.mps.openapi.editor.cells.DefaultSubstituteInfo;
import jetbrains.mps.nodeEditor.cellMenu.SEmptyContainmentSubstituteInfo;
import jetbrains.mps.nodeEditor.cellMenu.SChildSubstituteInfo;
import jetbrains.mps.openapi.editor.menus.transformation.SNodeLocation;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

/*package*/ class SeccionType_EditorBuilder_a extends AbstractEditorBuilder {
  @NotNull
  private SNode myNode;

  public SeccionType_EditorBuilder_a(@NotNull EditorContext context, @NotNull SNode node) {
    super(context);
    myNode = node;
  }

  @NotNull
  @Override
  public SNode getNode() {
    return myNode;
  }

  /*package*/ EditorCell createCell() {
    return createCollection_0();
  }

  private EditorCell createCollection_0() {
    EditorCell_Collection editorCell = new EditorCell_Collection(getEditorContext(), myNode, new CellLayout_Vertical());
    editorCell.setCellId("Collection_6j8kq6_a");
    editorCell.setBig(true);
    setCellContext(editorCell);
    editorCell.addEditorCell(createRefNode_0());
    editorCell.addEditorCell(createRefNode_1());
    editorCell.addEditorCell(createRefNode_2());
    editorCell.addEditorCell(createRefNode_3());
    editorCell.addEditorCell(createRefNode_4());
    editorCell.addEditorCell(createRefNode_5());
    editorCell.addEditorCell(createRefNode_6());
    editorCell.addEditorCell(createRefNode_7());
    editorCell.addEditorCell(createConstant_0());
    return editorCell;
  }
  private EditorCell createRefNode_0() {
    SingleRoleCellProvider provider = new accordionSingleRoleHandler_6j8kq6_a0(myNode, LINKS.accordion$eh5C, getEditorContext());
    return provider.createCell();
  }
  private static class accordionSingleRoleHandler_6j8kq6_a0 extends SingleRoleCellProvider {
    @NotNull
    private SNode myNode;

    public accordionSingleRoleHandler_6j8kq6_a0(SNode ownerNode, SContainmentLink containmentLink, EditorContext context) {
      super(containmentLink, context);
      myNode = ownerNode;
    }

    @Override
    @NotNull
    public SNode getNode() {
      return myNode;
    }

    protected EditorCell createChildCell(SNode child) {
      EditorCell editorCell = getUpdateSession().updateChildNodeCell(child);
      editorCell.setAction(CellActionType.DELETE, new CellAction_DeleteSmart(getNode(), LINKS.accordion$eh5C, child));
      editorCell.setAction(CellActionType.BACKSPACE, new CellAction_DeleteSmart(getNode(), LINKS.accordion$eh5C, child));
      installCellInfo(child, editorCell, false);
      return editorCell;
    }



    private void installCellInfo(SNode child, EditorCell editorCell, boolean isEmpty) {
      if (editorCell.getSubstituteInfo() == null || editorCell.getSubstituteInfo() instanceof DefaultSubstituteInfo) {
        editorCell.setSubstituteInfo((isEmpty ? new SEmptyContainmentSubstituteInfo(editorCell) : new SChildSubstituteInfo(editorCell)));
      }
      if (editorCell.getSRole() == null) {
        editorCell.setSRole(LINKS.accordion$eh5C);
      }
    }
    @Override
    protected EditorCell createEmptyCell() {
      getCellFactory().pushCellContext();
      getCellFactory().setNodeLocation(new SNodeLocation.FromParentAndLink(getNode(), LINKS.accordion$eh5C));
      try {
        EditorCell editorCell = super.createEmptyCell();
        editorCell.setCellId("empty_accordion");
        installCellInfo(null, editorCell, true);
        setCellContext(editorCell);
        return editorCell;
      } finally {
        getCellFactory().popCellContext();
      }
    }
    protected String getNoTargetText() {
      return "<no accordion>";
    }
  }
  private EditorCell createRefNode_1() {
    SingleRoleCellProvider provider = new alertsSingleRoleHandler_6j8kq6_b0(myNode, LINKS.alerts$ehzE, getEditorContext());
    return provider.createCell();
  }
  private static class alertsSingleRoleHandler_6j8kq6_b0 extends SingleRoleCellProvider {
    @NotNull
    private SNode myNode;

    public alertsSingleRoleHandler_6j8kq6_b0(SNode ownerNode, SContainmentLink containmentLink, EditorContext context) {
      super(containmentLink, context);
      myNode = ownerNode;
    }

    @Override
    @NotNull
    public SNode getNode() {
      return myNode;
    }

    protected EditorCell createChildCell(SNode child) {
      EditorCell editorCell = getUpdateSession().updateChildNodeCell(child);
      editorCell.setAction(CellActionType.DELETE, new CellAction_DeleteSmart(getNode(), LINKS.alerts$ehzE, child));
      editorCell.setAction(CellActionType.BACKSPACE, new CellAction_DeleteSmart(getNode(), LINKS.alerts$ehzE, child));
      installCellInfo(child, editorCell, false);
      return editorCell;
    }



    private void installCellInfo(SNode child, EditorCell editorCell, boolean isEmpty) {
      if (editorCell.getSubstituteInfo() == null || editorCell.getSubstituteInfo() instanceof DefaultSubstituteInfo) {
        editorCell.setSubstituteInfo((isEmpty ? new SEmptyContainmentSubstituteInfo(editorCell) : new SChildSubstituteInfo(editorCell)));
      }
      if (editorCell.getSRole() == null) {
        editorCell.setSRole(LINKS.alerts$ehzE);
      }
    }
    @Override
    protected EditorCell createEmptyCell() {
      getCellFactory().pushCellContext();
      getCellFactory().setNodeLocation(new SNodeLocation.FromParentAndLink(getNode(), LINKS.alerts$ehzE));
      try {
        EditorCell editorCell = super.createEmptyCell();
        editorCell.setCellId("empty_alerts");
        installCellInfo(null, editorCell, true);
        setCellContext(editorCell);
        return editorCell;
      } finally {
        getCellFactory().popCellContext();
      }
    }
    protected String getNoTargetText() {
      return "<no alerts>";
    }
  }
  private EditorCell createRefNode_2() {
    SingleRoleCellProvider provider = new cardDeckSingleRoleHandler_6j8kq6_c0(myNode, LINKS.cardDeck$bMX6, getEditorContext());
    return provider.createCell();
  }
  private static class cardDeckSingleRoleHandler_6j8kq6_c0 extends SingleRoleCellProvider {
    @NotNull
    private SNode myNode;

    public cardDeckSingleRoleHandler_6j8kq6_c0(SNode ownerNode, SContainmentLink containmentLink, EditorContext context) {
      super(containmentLink, context);
      myNode = ownerNode;
    }

    @Override
    @NotNull
    public SNode getNode() {
      return myNode;
    }

    protected EditorCell createChildCell(SNode child) {
      EditorCell editorCell = getUpdateSession().updateChildNodeCell(child);
      editorCell.setAction(CellActionType.DELETE, new CellAction_DeleteSmart(getNode(), LINKS.cardDeck$bMX6, child));
      editorCell.setAction(CellActionType.BACKSPACE, new CellAction_DeleteSmart(getNode(), LINKS.cardDeck$bMX6, child));
      installCellInfo(child, editorCell, false);
      return editorCell;
    }



    private void installCellInfo(SNode child, EditorCell editorCell, boolean isEmpty) {
      if (editorCell.getSubstituteInfo() == null || editorCell.getSubstituteInfo() instanceof DefaultSubstituteInfo) {
        editorCell.setSubstituteInfo((isEmpty ? new SEmptyContainmentSubstituteInfo(editorCell) : new SChildSubstituteInfo(editorCell)));
      }
      if (editorCell.getSRole() == null) {
        editorCell.setSRole(LINKS.cardDeck$bMX6);
      }
    }
    @Override
    protected EditorCell createEmptyCell() {
      getCellFactory().pushCellContext();
      getCellFactory().setNodeLocation(new SNodeLocation.FromParentAndLink(getNode(), LINKS.cardDeck$bMX6));
      try {
        EditorCell editorCell = super.createEmptyCell();
        editorCell.setCellId("empty_cardDeck");
        installCellInfo(null, editorCell, true);
        setCellContext(editorCell);
        return editorCell;
      } finally {
        getCellFactory().popCellContext();
      }
    }
    protected String getNoTargetText() {
      return "<no cardDeck>";
    }
  }
  private EditorCell createRefNode_3() {
    SingleRoleCellProvider provider = new carouselSingleRoleHandler_6j8kq6_d0(myNode, LINKS.carousel$eivI, getEditorContext());
    return provider.createCell();
  }
  private static class carouselSingleRoleHandler_6j8kq6_d0 extends SingleRoleCellProvider {
    @NotNull
    private SNode myNode;

    public carouselSingleRoleHandler_6j8kq6_d0(SNode ownerNode, SContainmentLink containmentLink, EditorContext context) {
      super(containmentLink, context);
      myNode = ownerNode;
    }

    @Override
    @NotNull
    public SNode getNode() {
      return myNode;
    }

    protected EditorCell createChildCell(SNode child) {
      EditorCell editorCell = getUpdateSession().updateChildNodeCell(child);
      editorCell.setAction(CellActionType.DELETE, new CellAction_DeleteSmart(getNode(), LINKS.carousel$eivI, child));
      editorCell.setAction(CellActionType.BACKSPACE, new CellAction_DeleteSmart(getNode(), LINKS.carousel$eivI, child));
      installCellInfo(child, editorCell, false);
      return editorCell;
    }



    private void installCellInfo(SNode child, EditorCell editorCell, boolean isEmpty) {
      if (editorCell.getSubstituteInfo() == null || editorCell.getSubstituteInfo() instanceof DefaultSubstituteInfo) {
        editorCell.setSubstituteInfo((isEmpty ? new SEmptyContainmentSubstituteInfo(editorCell) : new SChildSubstituteInfo(editorCell)));
      }
      if (editorCell.getSRole() == null) {
        editorCell.setSRole(LINKS.carousel$eivI);
      }
    }
    @Override
    protected EditorCell createEmptyCell() {
      getCellFactory().pushCellContext();
      getCellFactory().setNodeLocation(new SNodeLocation.FromParentAndLink(getNode(), LINKS.carousel$eivI));
      try {
        EditorCell editorCell = super.createEmptyCell();
        editorCell.setCellId("empty_carousel");
        installCellInfo(null, editorCell, true);
        setCellContext(editorCell);
        return editorCell;
      } finally {
        getCellFactory().popCellContext();
      }
    }
    protected String getNoTargetText() {
      return "<no carousel>";
    }
  }
  private EditorCell createRefNode_4() {
    SingleRoleCellProvider provider = new heroSingleRoleHandler_6j8kq6_e0(myNode, LINKS.hero$bMv4, getEditorContext());
    return provider.createCell();
  }
  private static class heroSingleRoleHandler_6j8kq6_e0 extends SingleRoleCellProvider {
    @NotNull
    private SNode myNode;

    public heroSingleRoleHandler_6j8kq6_e0(SNode ownerNode, SContainmentLink containmentLink, EditorContext context) {
      super(containmentLink, context);
      myNode = ownerNode;
    }

    @Override
    @NotNull
    public SNode getNode() {
      return myNode;
    }

    protected EditorCell createChildCell(SNode child) {
      EditorCell editorCell = getUpdateSession().updateChildNodeCell(child);
      editorCell.setAction(CellActionType.DELETE, new CellAction_DeleteSmart(getNode(), LINKS.hero$bMv4, child));
      editorCell.setAction(CellActionType.BACKSPACE, new CellAction_DeleteSmart(getNode(), LINKS.hero$bMv4, child));
      installCellInfo(child, editorCell, false);
      return editorCell;
    }



    private void installCellInfo(SNode child, EditorCell editorCell, boolean isEmpty) {
      if (editorCell.getSubstituteInfo() == null || editorCell.getSubstituteInfo() instanceof DefaultSubstituteInfo) {
        editorCell.setSubstituteInfo((isEmpty ? new SEmptyContainmentSubstituteInfo(editorCell) : new SChildSubstituteInfo(editorCell)));
      }
      if (editorCell.getSRole() == null) {
        editorCell.setSRole(LINKS.hero$bMv4);
      }
    }
    @Override
    protected EditorCell createEmptyCell() {
      getCellFactory().pushCellContext();
      getCellFactory().setNodeLocation(new SNodeLocation.FromParentAndLink(getNode(), LINKS.hero$bMv4));
      try {
        EditorCell editorCell = super.createEmptyCell();
        editorCell.setCellId("empty_hero");
        installCellInfo(null, editorCell, true);
        setCellContext(editorCell);
        return editorCell;
      } finally {
        getCellFactory().popCellContext();
      }
    }
    protected String getNoTargetText() {
      return "<no hero>";
    }
  }
  private EditorCell createRefNode_5() {
    SingleRoleCellProvider provider = new modalSingleRoleHandler_6j8kq6_f0(myNode, LINKS.modal$ei1G, getEditorContext());
    return provider.createCell();
  }
  private static class modalSingleRoleHandler_6j8kq6_f0 extends SingleRoleCellProvider {
    @NotNull
    private SNode myNode;

    public modalSingleRoleHandler_6j8kq6_f0(SNode ownerNode, SContainmentLink containmentLink, EditorContext context) {
      super(containmentLink, context);
      myNode = ownerNode;
    }

    @Override
    @NotNull
    public SNode getNode() {
      return myNode;
    }

    protected EditorCell createChildCell(SNode child) {
      EditorCell editorCell = getUpdateSession().updateChildNodeCell(child);
      editorCell.setAction(CellActionType.DELETE, new CellAction_DeleteSmart(getNode(), LINKS.modal$ei1G, child));
      editorCell.setAction(CellActionType.BACKSPACE, new CellAction_DeleteSmart(getNode(), LINKS.modal$ei1G, child));
      installCellInfo(child, editorCell, false);
      return editorCell;
    }



    private void installCellInfo(SNode child, EditorCell editorCell, boolean isEmpty) {
      if (editorCell.getSubstituteInfo() == null || editorCell.getSubstituteInfo() instanceof DefaultSubstituteInfo) {
        editorCell.setSubstituteInfo((isEmpty ? new SEmptyContainmentSubstituteInfo(editorCell) : new SChildSubstituteInfo(editorCell)));
      }
      if (editorCell.getSRole() == null) {
        editorCell.setSRole(LINKS.modal$ei1G);
      }
    }
    @Override
    protected EditorCell createEmptyCell() {
      getCellFactory().pushCellContext();
      getCellFactory().setNodeLocation(new SNodeLocation.FromParentAndLink(getNode(), LINKS.modal$ei1G));
      try {
        EditorCell editorCell = super.createEmptyCell();
        editorCell.setCellId("empty_modal");
        installCellInfo(null, editorCell, true);
        setCellContext(editorCell);
        return editorCell;
      } finally {
        getCellFactory().popCellContext();
      }
    }
    protected String getNoTargetText() {
      return "<no modal>";
    }
  }
  private EditorCell createRefNode_6() {
    SingleRoleCellProvider provider = new navBarSingleRoleHandler_6j8kq6_g0(myNode, LINKS.navBar$bM12, getEditorContext());
    return provider.createCell();
  }
  private static class navBarSingleRoleHandler_6j8kq6_g0 extends SingleRoleCellProvider {
    @NotNull
    private SNode myNode;

    public navBarSingleRoleHandler_6j8kq6_g0(SNode ownerNode, SContainmentLink containmentLink, EditorContext context) {
      super(containmentLink, context);
      myNode = ownerNode;
    }

    @Override
    @NotNull
    public SNode getNode() {
      return myNode;
    }

    protected EditorCell createChildCell(SNode child) {
      EditorCell editorCell = getUpdateSession().updateChildNodeCell(child);
      editorCell.setAction(CellActionType.DELETE, new CellAction_DeleteSmart(getNode(), LINKS.navBar$bM12, child));
      editorCell.setAction(CellActionType.BACKSPACE, new CellAction_DeleteSmart(getNode(), LINKS.navBar$bM12, child));
      installCellInfo(child, editorCell, false);
      return editorCell;
    }



    private void installCellInfo(SNode child, EditorCell editorCell, boolean isEmpty) {
      if (editorCell.getSubstituteInfo() == null || editorCell.getSubstituteInfo() instanceof DefaultSubstituteInfo) {
        editorCell.setSubstituteInfo((isEmpty ? new SEmptyContainmentSubstituteInfo(editorCell) : new SChildSubstituteInfo(editorCell)));
      }
      if (editorCell.getSRole() == null) {
        editorCell.setSRole(LINKS.navBar$bM12);
      }
    }
    @Override
    protected EditorCell createEmptyCell() {
      getCellFactory().pushCellContext();
      getCellFactory().setNodeLocation(new SNodeLocation.FromParentAndLink(getNode(), LINKS.navBar$bM12));
      try {
        EditorCell editorCell = super.createEmptyCell();
        editorCell.setCellId("empty_navBar");
        installCellInfo(null, editorCell, true);
        setCellContext(editorCell);
        return editorCell;
      } finally {
        getCellFactory().popCellContext();
      }
    }
    protected String getNoTargetText() {
      return "<no navBar>";
    }
  }
  private EditorCell createRefNode_7() {
    SingleRoleCellProvider provider = new toastSingleRoleHandler_6j8kq6_h0(myNode, LINKS.toast$eon7, getEditorContext());
    return provider.createCell();
  }
  private static class toastSingleRoleHandler_6j8kq6_h0 extends SingleRoleCellProvider {
    @NotNull
    private SNode myNode;

    public toastSingleRoleHandler_6j8kq6_h0(SNode ownerNode, SContainmentLink containmentLink, EditorContext context) {
      super(containmentLink, context);
      myNode = ownerNode;
    }

    @Override
    @NotNull
    public SNode getNode() {
      return myNode;
    }

    protected EditorCell createChildCell(SNode child) {
      EditorCell editorCell = getUpdateSession().updateChildNodeCell(child);
      editorCell.setAction(CellActionType.DELETE, new CellAction_DeleteSmart(getNode(), LINKS.toast$eon7, child));
      editorCell.setAction(CellActionType.BACKSPACE, new CellAction_DeleteSmart(getNode(), LINKS.toast$eon7, child));
      installCellInfo(child, editorCell, false);
      return editorCell;
    }



    private void installCellInfo(SNode child, EditorCell editorCell, boolean isEmpty) {
      if (editorCell.getSubstituteInfo() == null || editorCell.getSubstituteInfo() instanceof DefaultSubstituteInfo) {
        editorCell.setSubstituteInfo((isEmpty ? new SEmptyContainmentSubstituteInfo(editorCell) : new SChildSubstituteInfo(editorCell)));
      }
      if (editorCell.getSRole() == null) {
        editorCell.setSRole(LINKS.toast$eon7);
      }
    }
    @Override
    protected EditorCell createEmptyCell() {
      getCellFactory().pushCellContext();
      getCellFactory().setNodeLocation(new SNodeLocation.FromParentAndLink(getNode(), LINKS.toast$eon7));
      try {
        EditorCell editorCell = super.createEmptyCell();
        editorCell.setCellId("empty_toast");
        installCellInfo(null, editorCell, true);
        setCellContext(editorCell);
        return editorCell;
      } finally {
        getCellFactory().popCellContext();
      }
    }
    protected String getNoTargetText() {
      return "<no toast>";
    }
  }
  private EditorCell createConstant_0() {
    EditorCell_Constant editorCell = new EditorCell_Constant(getEditorContext(), myNode, "");
    editorCell.setCellId("Constant_6j8kq6_i0");
    editorCell.setDefaultText("");
    return editorCell;
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink accordion$eh5C = MetaAdapterFactory.getContainmentLink(0xccc77a9e69584a98L, 0xa8364a20ed0f063aL, 0x48b0f8fe54594779L, 0x48b0f8fe54594828L, "accordion");
    /*package*/ static final SContainmentLink alerts$ehzE = MetaAdapterFactory.getContainmentLink(0xccc77a9e69584a98L, 0xa8364a20ed0f063aL, 0x48b0f8fe54594779L, 0x48b0f8fe5459482aL, "alerts");
    /*package*/ static final SContainmentLink cardDeck$bMX6 = MetaAdapterFactory.getContainmentLink(0xccc77a9e69584a98L, 0xa8364a20ed0f063aL, 0x48b0f8fe54594779L, 0x48b0f8fe54594826L, "cardDeck");
    /*package*/ static final SContainmentLink carousel$eivI = MetaAdapterFactory.getContainmentLink(0xccc77a9e69584a98L, 0xa8364a20ed0f063aL, 0x48b0f8fe54594779L, 0x48b0f8fe5459482eL, "carousel");
    /*package*/ static final SContainmentLink hero$bMv4 = MetaAdapterFactory.getContainmentLink(0xccc77a9e69584a98L, 0xa8364a20ed0f063aL, 0x48b0f8fe54594779L, 0x48b0f8fe54594824L, "hero");
    /*package*/ static final SContainmentLink modal$ei1G = MetaAdapterFactory.getContainmentLink(0xccc77a9e69584a98L, 0xa8364a20ed0f063aL, 0x48b0f8fe54594779L, 0x48b0f8fe5459482cL, "modal");
    /*package*/ static final SContainmentLink navBar$bM12 = MetaAdapterFactory.getContainmentLink(0xccc77a9e69584a98L, 0xa8364a20ed0f063aL, 0x48b0f8fe54594779L, 0x48b0f8fe54594822L, "navBar");
    /*package*/ static final SContainmentLink toast$eon7 = MetaAdapterFactory.getContainmentLink(0xccc77a9e69584a98L, 0xa8364a20ed0f063aL, 0x48b0f8fe54594779L, 0x48b0f8fe54594832L, "toast");
  }
}
